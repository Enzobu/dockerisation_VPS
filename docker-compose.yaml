services:

  # # ==========================================================================================================
  # # =============================================== phpmyadmin ===============================================
  # # ==========================================================================================================

  phpmyadmin:
    # image: phpmyadmin:5.2.2-apache
    build:
      context: ./phpmyadmin
      dockerfile: Dockerfile
    container_name: vps_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - db_lab
      - db_gmao
      - db_neptune
    environment:
      PMA_ARBITRARY: 0
      PMA_HOSTS: db_lab, db_gmao, db_neptune

  # ==========================================================================================================
  # ================================================ api_gmao ================================================
  # ==========================================================================================================

  api_gmao:
    build:
      context: ./web/api_gmao
      dockerfile: Dockerfile
    container_name: vps_web_api_gmao
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - db_gmao
    environment:
      - DATABASE_HOST=db_gmao
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DB_GMAO_NAME}
      - DATABASE_USER=${DB_GMAO_USER}
      - DATABASE_PASSWORD=${DB_GMAO_PASSWORD}


  # ================================================ db_gmao =================================================

  db_gmao:
    build:
      context: ./db/mysql_gmao
      dockerfile: Dockerfile
    container_name: vps_db_mysql_gmao
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_GMAO_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_GMAO_NAME}
      MYSQL_USER: ${DB_GMAO_USER}
      MYSQL_PASSWORD: ${DB_GMAO_PASSWORD}
      PMA_HOST: db_gmao
    volumes:
      - db_gmao-data:/var/lib/mysql


  # ==========================================================================================================
  # ============================================ enzo_palermo_v1 =============================================
  # ==========================================================================================================

  enzo_palermo_v1:
    build:
      context: ./web/enzo_palermo_v1
      dockerfile: Dockerfile
    container_name: vps_web_enzo_palermo_v1
    restart: unless-stopped
    ports:
      - "8082:80"


  # ==========================================================================================================
  # ================================================== gamo ==================================================
  # ==========================================================================================================

  gamo:
    build:
      context: ./web/gmao
      dockerfile: Dockerfile
    container_name: vps_web_gmao
    restart: unless-stopped
    ports:
      - "8083:80"


  # ==========================================================================================================
  # ================================================= hi_mix =================================================
  # ==========================================================================================================

  hi_mix:
    build:
      context: ./web/hi-mix
      dockerfile: Dockerfile
    container_name: vps_web_hi_mix
    restart: unless-stopped
    ports:
      - "8084:80"


  # ==========================================================================================================
  # ================================================== html ==================================================
  # ==========================================================================================================

  html:
    build:
      context: ./web/html
      dockerfile: Dockerfile
    container_name: vps_web_html
    restart: unless-stopped
    ports:
      - "8085:80"


  # ==========================================================================================================
  # ================================================== lab ===================================================
  # ==========================================================================================================

  lab:
    build:
      context: ./web/lab
      dockerfile: Dockerfile
    container_name: vps_web_lab
    restart: unless-stopped
    ports:
      - "8086:80"
    depends_on:
      - db_lab
    environment:
      - DATABASE_HOST=db_lab
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DB_LAB_NAME}
      - DATABASE_USER=${DB_LAB_USER}
      - DATABASE_PASSWORD=${DB_LAB_PASSWORD}


  # ================================================= db_lab =================================================

  db_lab:
    build:
      context: ./db/mysql_lab
      dockerfile: Dockerfile
    container_name: vps_db_mysql_lab
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_LAB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_LAB_NAME}
      MYSQL_USER: ${DB_LAB_USER}
      MYSQL_PASSWORD: ${DB_LAB_PASSWORD}
      PMA_HOST: db_lab
    volumes:
      - db_lab-data:/var/lib/mysql


  # ==========================================================================================================
  # ============================================= projet_neptune =============================================
  # ==========================================================================================================

  projet_neptune:
    build:
      context: ./web/projet_neptune
      dockerfile: Dockerfile
    container_name: vps_web_projet_neptune
    restart: unless-stopped
    ports:
      - "8087:80"
    depends_on:
      - db_neptune
    environment:
      - DATABASE_HOST=db_neptune
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DB_NEPTUNE_NAME}
      - DATABASE_USER=${DB_NEPTUNE_USER}
      - DATABASE_PASSWORD=${DB_NEPTUNE_PASSWORD}


  # =============================================== db_neptune ===============================================

  db_neptune:
    build:
      context: ./db/mysql_neptune
      dockerfile: Dockerfile
    container_name: vps_db_mysql_neptune
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_NEPTUNE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NEPTUNE_NAME}
      MYSQL_USER: ${DB_NEPTUNE_USER}
      MYSQL_PASSWORD: ${DB_NEPTUNE_PASSWORD}
      PMA_HOST: db_neptune
    volumes:
      - db_neptune-data:/var/lib/mysql

# ==========================================================================================================
# ================================================ volumes =================================================
# ==========================================================================================================

volumes:
  db_gmao-data:
  db_lab-data:
  db_neptune-data: